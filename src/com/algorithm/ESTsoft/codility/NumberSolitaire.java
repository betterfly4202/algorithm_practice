package com.algorithm.ESTsoft.codility;

/**
 * Created by betterFLY on 2018. 7. 29.
 * Github : http://github.com/betterfly88
 */


/*
    한 선수를위한 게임은 0에서 N-1까지 번호가 매겨진 N 개의 연속 된 사각형으로 구성된 보드에서 진행됩니다. 각 사각형에는 숫자가 적혀 있습니다. N 개의 정수로 이루어진 비어 있지 않은 배열 A는 사각형에 쓰여진 숫자를 포함합니다. 또한, 게임 도중 몇몇 사각형을 표시 할 수 있습니다.

    게임이 시작될 때 제곱 0에 조약돌이 있으며 보드에 표시된 유일한 사각형입니다. 게임의 목표는 조약돌 번호를 N - 1로 이동하는 것입니다.

    매 번 턴마다 6면의 주사위를 던진다. 주사위의 숫자는 1에서 6까지이며, 숫자 K는 주사위가 올라간 후에 윗면에 표시된다. 그런 다음 사각형 번호 I에 서있는 조약돌을 I + K의 제곱 번호로 옮깁니다. 제곱수 I + K가 존재하지 않으면 유효한 이동을 얻을 때까지 다시 주사위를 던집니다. 마지막으로, 우리는 제곱수 I + K를 표시합니다.

    게임이 끝난 후 (자갈이 N-1에 서있을 때) 결과를 계산합니다. 게임의 결과는 표시된 모든 사각형에 쓰여진 숫자의 합계입니다.

    예를 들어, 다음 배열이 주어진 경우 :

        A [0] = 1
        A [1] = -2
        A [2] = 0
        A [3] = 9
        A [4] = -1
        A [5] = -2
    가능한 게임은 다음과 같습니다.

    자갈은 표시된 0 번 제곱에 있습니다.
    우리는 3을 던졌습니다. 자갈은 제곱 수 0에서 제곱 수 3으로 이동합니다. 우리는 제곱 번호 3을 표시합니다;
    우리는 5를 던졌습니다. 보드에 사각형 번호 8이 없으므로 자갈은 움직이지 않습니다.
    우리는 2를 던진다. 자갈은 제곱 번호 5로 이동합니다. 우리는이 사각형을 표시하고 게임이 끝납니다.
    표시된 사각형은 0, 3 및 5이므로 게임의 결과는 1 + 9 + (-2) = 8입니다.이 보드에서 얻을 수있는 최대 결과입니다.

    함수를 작성하십시오.

    클래스 솔루션 {public int solution (int [] A); }

    N 개의 정수 중 비어 있지 않은 배열 A가 주어지면 배열 A로 표현 된 보드에서 얻을 수있는 최대 결과를 반환합니다.

    예를 들어, 주어진 배열

        A [0] = 1
        A [1] = -2
        A [2] = 0
        A [3] = 9
        A [4] = -1
        A [5] = -2
    함수는 위에서 설명한대로 8을 반환해야합니다.

    가정하자면 :

    N은 [ 2 .. 100,000 ] 범위의 정수입니다 .
    배열 A의 각 요소는 [ -10,000 .. 10,000 ] 범위의 정수 입니다.
    복잡성:

    기대 최악의 경우의 시간 복잡도는 O (N)이다.
    예상 최악의 경우의 공간 복잡도는 O (N) (입력 인수에 필요한 저장소를 계산하지 않음)입니다.

 */
public class NumberSolitaire {
}
